{"remainingRequest":"/home/awais-pc/vue/vue-people-development/node_modules/thread-loader/dist/cjs.js!/home/awais-pc/vue/vue-people-development/node_modules/babel-loader/lib/index.js!/home/awais-pc/vue/vue-people-development/node_modules/vuetify/lib/components/VGrid/VCol.js","dependencies":[{"path":"/home/awais-pc/vue/vue-people-development/node_modules/vuetify/lib/components/VGrid/VCol.js","mtime":1645387742654},{"path":"/home/awais-pc/vue/vue-people-development/babel.config.js","mtime":1645387737154},{"path":"/home/awais-pc/vue/vue-people-development/node_modules/cache-loader/dist/cjs.js","mtime":1645387684150},{"path":"/home/awais-pc/vue/vue-people-development/node_modules/thread-loader/dist/cjs.js","mtime":1645387684150},{"path":"/home/awais-pc/vue/vue-people-development/node_modules/babel-loader/lib/index.js","mtime":1645387684922}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9hd2Fpcy1wYy92dWUvdnVlLXBlb3BsZS1kZXZlbG9wbWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvaG9tZS9hd2Fpcy1wYy92dWUvdnVlLXBlb3BsZS1kZXZlbG9wbWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb21lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIjsKaW1wb3J0ICIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WR3JpZC5zYXNzIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgbWVyZ2VEYXRhIGZyb20gJy4uLy4uL3V0aWwvbWVyZ2VEYXRhJzsKaW1wb3J0IHsgdXBwZXJGaXJzdCB9IGZyb20gJy4uLy4uL3V0aWwvaGVscGVycyc7IC8vIG5vIHhzCgp2YXIgYnJlYWtwb2ludHMgPSBbJ3NtJywgJ21kJywgJ2xnJywgJ3hsJ107Cgp2YXIgYnJlYWtwb2ludFByb3BzID0gZnVuY3Rpb24gKCkgewogIHJldHVybiBicmVha3BvaW50cy5yZWR1Y2UoZnVuY3Rpb24gKHByb3BzLCB2YWwpIHsKICAgIHByb3BzW3ZhbF0gPSB7CiAgICAgIHR5cGU6IFtCb29sZWFuLCBTdHJpbmcsIE51bWJlcl0sCiAgICAgICJkZWZhdWx0IjogZmFsc2UKICAgIH07CiAgICByZXR1cm4gcHJvcHM7CiAgfSwge30pOwp9KCk7Cgp2YXIgb2Zmc2V0UHJvcHMgPSBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIGJyZWFrcG9pbnRzLnJlZHVjZShmdW5jdGlvbiAocHJvcHMsIHZhbCkgewogICAgcHJvcHNbJ29mZnNldCcgKyB1cHBlckZpcnN0KHZhbCldID0gewogICAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLAogICAgICAiZGVmYXVsdCI6IG51bGwKICAgIH07CiAgICByZXR1cm4gcHJvcHM7CiAgfSwge30pOwp9KCk7Cgp2YXIgb3JkZXJQcm9wcyA9IGZ1bmN0aW9uICgpIHsKICByZXR1cm4gYnJlYWtwb2ludHMucmVkdWNlKGZ1bmN0aW9uIChwcm9wcywgdmFsKSB7CiAgICBwcm9wc1snb3JkZXInICsgdXBwZXJGaXJzdCh2YWwpXSA9IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgImRlZmF1bHQiOiBudWxsCiAgICB9OwogICAgcmV0dXJuIHByb3BzOwogIH0sIHt9KTsKfSgpOwoKdmFyIHByb3BNYXAgPSB7CiAgY29sOiBPYmplY3Qua2V5cyhicmVha3BvaW50UHJvcHMpLAogIG9mZnNldDogT2JqZWN0LmtleXMob2Zmc2V0UHJvcHMpLAogIG9yZGVyOiBPYmplY3Qua2V5cyhvcmRlclByb3BzKQp9OwoKZnVuY3Rpb24gYnJlYWtwb2ludENsYXNzKHR5cGUsIHByb3AsIHZhbCkgewogIHZhciBjbGFzc05hbWUgPSB0eXBlOwoKICBpZiAodmFsID09IG51bGwgfHwgdmFsID09PSBmYWxzZSkgewogICAgcmV0dXJuIHVuZGVmaW5lZDsKICB9CgogIGlmIChwcm9wKSB7CiAgICB2YXIgYnJlYWtwb2ludCA9IHByb3AucmVwbGFjZSh0eXBlLCAnJyk7CiAgICBjbGFzc05hbWUgKz0gIi0iLmNvbmNhdChicmVha3BvaW50KTsKICB9IC8vIEhhbmRsaW5nIHRoZSBib29sZWFuIHN0eWxlIHByb3Agd2hlbiBhY2NlcHRpbmcgW0Jvb2xlYW4sIFN0cmluZywgTnVtYmVyXQogIC8vIG1lYW5zIFZ1ZSB3aWxsIG5vdCBjb252ZXJ0IDx2LWNvbCBzbT48L3YtY29sPiB0byBzbTogdHJ1ZSBmb3IgdXMuCiAgLy8gU2luY2UgdGhlIGRlZmF1bHQgaXMgZmFsc2UsIGFuIGVtcHR5IHN0cmluZyBpbmRpY2F0ZXMgdGhlIHByb3AncyBwcmVzZW5jZS4KCgogIGlmICh0eXBlID09PSAnY29sJyAmJiAodmFsID09PSAnJyB8fCB2YWwgPT09IHRydWUpKSB7CiAgICAvLyAuY29sLW1kCiAgICByZXR1cm4gY2xhc3NOYW1lLnRvTG93ZXJDYXNlKCk7CiAgfSAvLyAub3JkZXItbWQtNgoKCiAgY2xhc3NOYW1lICs9ICItIi5jb25jYXQodmFsKTsKICByZXR1cm4gY2xhc3NOYW1lLnRvTG93ZXJDYXNlKCk7Cn0KCnZhciBjYWNoZSA9IG5ldyBNYXAoKTsKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgbmFtZTogJ3YtY29sJywKICBmdW5jdGlvbmFsOiB0cnVlLAogIHByb3BzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHsKICAgIGNvbHM6IHsKICAgICAgdHlwZTogW0Jvb2xlYW4sIFN0cmluZywgTnVtYmVyXSwKICAgICAgImRlZmF1bHQiOiBmYWxzZQogICAgfQogIH0sIGJyZWFrcG9pbnRQcm9wcyksIHt9LCB7CiAgICBvZmZzZXQ6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgImRlZmF1bHQiOiBudWxsCiAgICB9CiAgfSwgb2Zmc2V0UHJvcHMpLCB7fSwgewogICAgb3JkZXI6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgImRlZmF1bHQiOiBudWxsCiAgICB9CiAgfSwgb3JkZXJQcm9wcyksIHt9LCB7CiAgICBhbGlnblNlbGY6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHN0cikgewogICAgICAgIHJldHVybiBbJ2F1dG8nLCAnc3RhcnQnLCAnZW5kJywgJ2NlbnRlcicsICdiYXNlbGluZScsICdzdHJldGNoJ10uaW5jbHVkZXMoc3RyKTsKICAgICAgfQogICAgfSwKICAgIHRhZzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogJ2RpdicKICAgIH0KICB9KSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBfcmVmKSB7CiAgICB2YXIgcHJvcHMgPSBfcmVmLnByb3BzLAogICAgICAgIGRhdGEgPSBfcmVmLmRhdGEsCiAgICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuLAogICAgICAgIHBhcmVudCA9IF9yZWYucGFyZW50OwogICAgLy8gU3VwZXItZmFzdCBtZW1vaXphdGlvbiBiYXNlZCBvbiBwcm9wcywgNXggZmFzdGVyIHRoYW4gSlNPTi5zdHJpbmdpZnkKICAgIHZhciBjYWNoZUtleSA9ICcnOwoKICAgIGZvciAodmFyIHByb3AgaW4gcHJvcHMpIHsKICAgICAgY2FjaGVLZXkgKz0gU3RyaW5nKHByb3BzW3Byb3BdKTsKICAgIH0KCiAgICB2YXIgY2xhc3NMaXN0ID0gY2FjaGUuZ2V0KGNhY2hlS2V5KTsKCiAgICBpZiAoIWNsYXNzTGlzdCkgewogICAgICAoZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfY2xhc3NMaXN0JHB1c2g7CgogICAgICAgIGNsYXNzTGlzdCA9IFtdOyAvLyBMb29wIHRocm91Z2ggYGNvbGAsIGBvZmZzZXRgLCBgb3JkZXJgIGJyZWFrcG9pbnQgcHJvcHMKCiAgICAgICAgdmFyIHR5cGU7CgogICAgICAgIGZvciAodHlwZSBpbiBwcm9wTWFwKSB7CiAgICAgICAgICBwcm9wTWFwW3R5cGVdLmZvckVhY2goZnVuY3Rpb24gKHByb3ApIHsKICAgICAgICAgICAgdmFyIHZhbHVlID0gcHJvcHNbcHJvcF07CiAgICAgICAgICAgIHZhciBjbGFzc05hbWUgPSBicmVha3BvaW50Q2xhc3ModHlwZSwgcHJvcCwgdmFsdWUpOwogICAgICAgICAgICBpZiAoY2xhc3NOYW1lKSBjbGFzc0xpc3QucHVzaChjbGFzc05hbWUpOwogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICB2YXIgaGFzQ29sQ2xhc3NlcyA9IGNsYXNzTGlzdC5zb21lKGZ1bmN0aW9uIChjbGFzc05hbWUpIHsKICAgICAgICAgIHJldHVybiBjbGFzc05hbWUuc3RhcnRzV2l0aCgnY29sLScpOwogICAgICAgIH0pOwogICAgICAgIGNsYXNzTGlzdC5wdXNoKChfY2xhc3NMaXN0JHB1c2ggPSB7CiAgICAgICAgICAvLyBEZWZhdWx0IHRvIC5jb2wgaWYgbm8gb3RoZXIgY29sLXticH0tKiBjbGFzc2VzIGdlbmVyYXRlZCBub3IgYGNvbHNgIHNwZWNpZmllZC4KICAgICAgICAgIGNvbDogIWhhc0NvbENsYXNzZXMgfHwgIXByb3BzLmNvbHMKICAgICAgICB9LCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTGlzdCRwdXNoLCAiY29sLSIuY29uY2F0KHByb3BzLmNvbHMpLCBwcm9wcy5jb2xzKSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc0xpc3QkcHVzaCwgIm9mZnNldC0iLmNvbmNhdChwcm9wcy5vZmZzZXQpLCBwcm9wcy5vZmZzZXQpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTGlzdCRwdXNoLCAib3JkZXItIi5jb25jYXQocHJvcHMub3JkZXIpLCBwcm9wcy5vcmRlciksIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NMaXN0JHB1c2gsICJhbGlnbi1zZWxmLSIuY29uY2F0KHByb3BzLmFsaWduU2VsZiksIHByb3BzLmFsaWduU2VsZiksIF9jbGFzc0xpc3QkcHVzaCkpOwogICAgICAgIGNhY2hlLnNldChjYWNoZUtleSwgY2xhc3NMaXN0KTsKICAgICAgfSkoKTsKICAgIH0KCiAgICByZXR1cm4gaChwcm9wcy50YWcsIG1lcmdlRGF0YShkYXRhLCB7CiAgICAgICJjbGFzcyI6IGNsYXNzTGlzdAogICAgfSksIGNoaWxkcmVuKTsKICB9Cn0pOw=="},{"version":3,"mappings":"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","names":["Vue","mergeData","upperFirst","breakpoints","breakpointProps","reduce","props","val","type","Boolean","String","Number","offsetProps","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","undefined","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","cols","alignSelf","validator","includes","str","tag","render","h","data","children","parent","cacheKey","classList","get","forEach","value","push","hasColClasses","some","startsWith","set"],"sourceRoot":"","sources":["../../../src/components/VGrid/VCol.ts"],"sourcesContent":["import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n"]}]}